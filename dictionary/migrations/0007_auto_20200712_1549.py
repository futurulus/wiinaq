# Generated by Django 3.0.8 on 2020-07-12 22:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('dictionary', '0006_entry_search_word'),
    ]

    operations = [
        migrations.AlterField(
            model_name='entry',
            name='comments',
            field=models.TextField(blank=True, default='', help_text="Usage notes, miscellaneous points of interest, etc. These are visible on the word's page."),
        ),
        migrations.AlterField(
            model_name='entry',
            name='defn',
            field=models.TextField(verbose_name='definition'),
        ),
        migrations.AlterField(
            model_name='entry',
            name='entry',
            field=models.CharField(max_length=100, verbose_name='word'),
        ),
        migrations.AlterField(
            model_name='entry',
            name='etymology',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='entry',
            name='hidden',
            field=models.BooleanField(default=False, help_text='Check this to hide the entry from public viewing (e.g. if it contains things that are sacred, offensive, etc.)'),
        ),
        migrations.AlterField(
            model_name='entry',
            name='main_entry',
            field=models.ForeignKey(blank=True, help_text='If this is a sub-entry, link to the parent entry (form without a postbase, for example).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subentries', to='dictionary.Entry'),
        ),
        migrations.AlterField(
            model_name='entry',
            name='notes',
            field=models.TextField(blank=True, default='', help_text="Dictionary maintainers' notes. These are private and only visible to people with access to this admin site."),
        ),
        migrations.AlterField(
            model_name='entry',
            name='pos',
            field=models.CharField(blank=True, default='', help_text='To remove the part of speech entirely (show no ending tables for this word), enter "None".', max_length=10, verbose_name='part of speech'),
        ),
        migrations.AlterField(
            model_name='entry',
            name='pos_auto',
            field=models.CharField(default='None', editable=False, help_text='Automatically detected based on the word and other information. If "part of speech" is blank, this will be used.', max_length=10, verbose_name='part of speech (guess)'),
        ),
        migrations.AlterField(
            model_name='entry',
            name='pos_final',
            field=models.CharField(default='None', editable=False, max_length=10, verbose_name='Part of speech'),
        ),
        migrations.AlterField(
            model_name='entry',
            name='root',
            field=models.CharField(blank=True, default='', max_length=100),
        ),
        migrations.AlterField(
            model_name='entry',
            name='root_auto',
            field=models.CharField(default='', editable=False, help_text='Automatically detected based on the word and other information. If "root" is blank, this will be used.', max_length=100, verbose_name='root (guess)'),
        ),
        migrations.AlterField(
            model_name='entry',
            name='root_final',
            field=models.CharField(default='', editable=False, max_length=100, verbose_name='Root'),
        ),
        migrations.AlterField(
            model_name='entry',
            name='search_text',
            field=models.TextField(default='', editable=False, help_text="Used in the search algorithm. You probably won't need to worry about this."),
        ),
        migrations.AlterField(
            model_name='entry',
            name='search_word',
            field=models.TextField(default='', editable=False, help_text="Used in the search algorithm. You probably won't need to worry about this."),
        ),
        migrations.AlterField(
            model_name='entry',
            name='see_also',
            field=models.ManyToManyField(blank=True, help_text='Other entries that might be useful to look at', related_name='see_also_linked', through='dictionary.SeeAlso', to='dictionary.Entry'),
        ),
        migrations.AlterField(
            model_name='entry',
            name='source',
            field=models.ForeignKey(blank=True, help_text='Dictionary, book, speaker interview, etc. where this word was found', null=True, on_delete=django.db.models.deletion.SET_NULL, to='dictionary.Source'),
        ),
        migrations.AlterField(
            model_name='entry',
            name='source_info',
            field=models.CharField(blank=True, default='', help_text='Page numbers, file IDs, dates, or other specific information needed to find the word in the source.', max_length=200, verbose_name='source details'),
        ),
        migrations.AlterField(
            model_name='entry',
            name='source_link',
            field=models.URLField(blank=True, default='', help_text='A URL to link to the source. If not empty, this will turn the "source details" into a hyperlink.'),
        ),
        migrations.AlterField(
            model_name='entry',
            name='varieties',
            field=models.ManyToManyField(blank=True, help_text='Broad language variety, dialect, or geographic region', through='dictionary.EntryVarietyInfo', to='dictionary.Variety'),
        ),
        migrations.AlterField(
            model_name='entryexampleinfo',
            name='example',
            field=models.ForeignKey(help_text='Use the magnifying glass icon to search for or create new examples, then select an example and its ID will appear here.', on_delete=django.db.models.deletion.CASCADE, to='dictionary.Example', verbose_name='example ID'),
        ),
        migrations.AlterField(
            model_name='entryvarietyinfo',
            name='detail',
            field=models.CharField(blank=True, default='', help_text='Additional language variety details, e.g. city names, Northern/Southern for Kodiak, or specific speakers', max_length=200),
        ),
        migrations.AlterField(
            model_name='example',
            name='comments',
            field=models.TextField(blank=True, default='', help_text='Usage notes, miscellaneous points of interest, etc. These are visible below the example.'),
        ),
        migrations.AlterField(
            model_name='example',
            name='english',
            field=models.TextField(blank=True, help_text='Natural translation of the text into English', verbose_name='English'),
        ),
        migrations.AlterField(
            model_name='example',
            name='hidden',
            field=models.BooleanField(default=False, help_text='Check this to hide the example from public viewing (e.g. if it contains things that are sacred, offensive, etc.)'),
        ),
        migrations.AlterField(
            model_name='example',
            name='notes',
            field=models.TextField(blank=True, default='', help_text="Dictionary maintainers' notes. These are private and only visible to people with access to this admin site."),
        ),
        migrations.AlterField(
            model_name='example',
            name='source',
            field=models.ForeignKey(blank=True, help_text='Dictionary, book, speaker interview, etc. where this word was found', null=True, on_delete=django.db.models.deletion.SET_NULL, to='dictionary.Source'),
        ),
        migrations.AlterField(
            model_name='example',
            name='source_info',
            field=models.CharField(blank=True, default='', help_text='Page numbers, file IDs, dates, or other specific information needed to find the word in the source.', max_length=200, verbose_name='source details'),
        ),
        migrations.AlterField(
            model_name='example',
            name='source_link',
            field=models.URLField(blank=True, default='', help_text='A URL to link to the source. If not empty, this will turn the "source details" into a hyperlink.'),
        ),
        migrations.AlterField(
            model_name='example',
            name='varieties',
            field=models.ManyToManyField(blank=True, help_text='Broad language variety, dialect, or geographic region', through='dictionary.ExampleVarietyInfo', to='dictionary.Variety'),
        ),
        migrations.AlterField(
            model_name='example',
            name='vernacular',
            field=models.TextField(help_text='Text in Alutiiq (or perhaps other focus languages in the future?)', verbose_name='Alutiiq'),
        ),
        migrations.AlterField(
            model_name='examplevarietyinfo',
            name='detail',
            field=models.CharField(blank=True, default='', help_text='Additional language variety details, e.g. city names, Northern/Southern for Kodiak, or specific speakers', max_length=200, verbose_name='details'),
        ),
        migrations.AlterField(
            model_name='seealso',
            name='source',
            field=models.ForeignKey(help_text='The entry on which this "see also" will appear.', on_delete=django.db.models.deletion.CASCADE, related_name='see_also_outgoing', to='dictionary.Entry'),
        ),
        migrations.AlterField(
            model_name='seealso',
            name='target',
            field=models.ForeignKey(help_text='The entry this "see also" link will point to. Use the magnifying glass icon to search for entires, then select an entry and its ID will appear here.', on_delete=django.db.models.deletion.CASCADE, related_name='see_also_incoming', to='dictionary.Entry'),
        ),
        migrations.AlterField(
            model_name='source',
            name='abbrev',
            field=models.CharField(max_length=100, unique=True, verbose_name='abbreviation'),
        ),
        migrations.AlterField(
            model_name='source',
            name='description',
            field=models.CharField(max_length=1000, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='source',
            name='ordering',
            field=models.IntegerField(default=0, help_text='Controls what order sources show up in each dictionary entry. Sources with lower values of this number will appear first, with ties broken by alphabetical ordering of the abbreviation.', verbose_name='sort location'),
        ),
        migrations.AlterField(
            model_name='variety',
            name='abbrev',
            field=models.CharField(max_length=100, unique=True, verbose_name='abbreviation'),
        ),
    ]
